{"ast":null,"code":"var _jsxFileName = \"/Users/giose/ws/udemy/mercadolibre/pages/items.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport Router from 'next/router';\nimport fetch from 'isomorphic-fetch';\nimport Layout from '../components/Layout';\n\nconst Items = ({\n  news\n}) => {\n  const arrayItems = news === null || news === void 0 ? void 0 : news.results;\n  console.log('news', news === null || news === void 0 ? void 0 : news.results);\n\n  const handleSubmit = value => {\n    Router.push(`/items?search=${value}`);\n  };\n\n  const renderCard = () => {\n    __jsx(\"div\", {\n      class: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      class: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, \"This is some text within a card body.\"));\n  };\n\n  return __jsx(Layout, {\n    title: \"Items Page\",\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, arrayItems.map(item => console.log('item kjashdkjahdkjas', item)));\n};\n\nItems.getInitialProps = async ({\n  router\n}) => {\n  let news;\n\n  try {\n    var _router$query;\n\n    const res = await fetch(`https://api.mercadolibre.com/sites/MLA/search?q=:${router === null || router === void 0 ? void 0 : (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.search}`);\n    news = await res.json();\n  } catch (error) {\n    console.log(error);\n  }\n\n  return {\n    news\n  };\n};\n\nexport default withRouter(Items);","map":{"version":3,"sources":["/Users/giose/ws/udemy/mercadolibre/pages/items.js"],"names":["withRouter","Router","fetch","Layout","Items","news","arrayItems","results","console","log","handleSubmit","value","push","renderCard","map","item","getInitialProps","router","res","query","search","json","error"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC1B,QAAMC,UAAU,GAAGD,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,OAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,IAApB,aAAoBA,IAApB,uBAAoBA,IAAI,CAAEE,OAA1B;;AAEA,QAAMG,YAAY,GAAGC,KAAK,IAAI;AAC5BV,IAAAA,MAAM,CAACW,IAAP,CAAa,iBAAgBD,KAAM,EAAnC;AACD,GAFD;;AAIA,QAAME,UAAU,GAAG,MAAM;AACvB;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF;AAKD,GAND;;AAQA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,YAAd;AAA2B,IAAA,YAAY,EAAEH,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UAAU,CAACQ,GAAX,CAAeC,IAAI,IAAIP,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCM,IAApC,CAAvB,CADH,CADF;AAKD,CArBD;;AAuBAX,KAAK,CAACY,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAsB;AAC5C,MAAIZ,IAAJ;;AACA,MAAI;AAAA;;AACF,UAAMa,GAAG,GAAG,MAAMhB,KAAK,CAAE,oDAAmDe,MAApD,aAAoDA,MAApD,wCAAoDA,MAAM,CAAEE,KAA5D,kDAAoD,cAAeC,MAAO,EAA3E,CAAvB;AACAf,IAAAA,IAAI,GAAG,MAAMa,GAAG,CAACG,IAAJ,EAAb;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdd,IAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACD;;AACD,SAAO;AACLjB,IAAAA;AADK,GAAP;AAGD,CAXD;;AAaA,eAAeL,UAAU,CAACI,KAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router';\nimport Router from 'next/router';\nimport fetch from 'isomorphic-fetch';\nimport Layout from '../components/Layout';\n\nconst Items = ({ news }) => {\n  const arrayItems = news?.results;\n  console.log('news', news?.results)\n  \n  const handleSubmit = value => {\n    Router.push(`/items?search=${value}`)\n  }\n\n  const renderCard = () => {\n    <div class=\"card\">\n      <div class=\"card-body\">\n        This is some text within a card body.\n      </div>\n    </div>\n  }\n\n  return(\n    <Layout title='Items Page' handleSubmit={handleSubmit}>\n      {arrayItems.map(item => console.log('item kjashdkjahdkjas', item))}\n    </Layout>\n  )\n}\n\nItems.getInitialProps = async ({ router }) => {\n  let news;\n  try {\n    const res = await fetch(`https://api.mercadolibre.com/sites/MLA/search?q=:${router?.query?.search}`);\n    news = await res.json();\n  } catch (error) {\n    console.log(error)\n  }\n  return {\n    news\n  }\n}\n\nexport default withRouter(Items)"]},"metadata":{},"sourceType":"module"}